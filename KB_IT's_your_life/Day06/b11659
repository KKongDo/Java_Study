package b11659;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;

//입력값 
//5 3
//5 4 3 2 1
//1 3
//2 4
//5 5

//출력값 
//12
//9
//1

public class Main {
	public static void main(String[] args) throws IOException {
//		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
//		StringTokenizer st=new StringTokenizer(br.readLine());
// 		버퍼를 이용해서 사용자 입력을 받는 방법
		
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer(br.readLine());
		
		//Scanner sc=new Scanner(System.in);
		
		//int N=sc.nextInt();
		int N=Integer.parseInt(st.nextToken()); //수의 갯수
		//int M=sc.nextInt();
		int M=Integer.parseInt(st.nextToken()); //합의 횟수
		
		int[] arr=new int[N+1];// 배열의 인덱스 위치가 0이지만 문제에서는 1로 주어졌기 때문. 합의 배열
		
//		BufferedReader를 사용할 경우 새롭게 입력받을때는 다시 StringTokenizer와 readLine()를 써준다.
		st=new StringTokenizer(br.readLine());
		for(int i=1; i<arr.length; i++) {
			arr[i]=arr[i-1]+Integer.parseInt(st.nextToken());//이전합+현재입력숫자
		}
		
//		BufferedReader를 사용할 경우 새롭게 입력받을때는 다시 StringTokenizer와 readLine()를 써준다.
		for(int n=0; n<M; n++) {
			st=new StringTokenizer(br.readLine());
			int sum=0;
			int i=Integer.parseInt(st.nextToken()), j=Integer.parseInt(st.nextToken()); 
			sum=arr[j]-arr[i-1]; // 부분합의 공식 
			System.out.println(sum);
		}
		
		//sc.close();
	}
}
